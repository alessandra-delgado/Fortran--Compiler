State 0:
## Known stack suffix:
##
## LR(1) items:
prog' -> . prog [ # ]
## Transitions:
-- On SET shift to state 1
-- On PRINT shift to state 26
-- On stmts shift to state 28
-- On stmt shift to state 31
-- On prog shift to state 32
## Reductions:

State 1:
## Known stack suffix:
## SET
## LR(1) items:
stmt -> SET . IDENT EQ expr [ SET PRINT EOF ]
## Transitions:
-- On IDENT shift to state 2
## Reductions:

State 2:
## Known stack suffix:
## SET IDENT
## LR(1) items:
stmt -> SET IDENT . EQ expr [ SET PRINT EOF ]
## Transitions:
-- On EQ shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## SET IDENT EQ
## LR(1) items:
stmt -> SET IDENT EQ . expr [ SET PRINT EOF ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 25
## Reductions:

State 4:
## Known stack suffix:
## MINUS
## LR(1) items:
expr -> MINUS . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 24
## Reductions:

State 5:
## Known stack suffix:
## LP
## LR(1) items:
expr -> LP . expr RP [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 22
## Reductions:

State 6:
## Known stack suffix:
## LET
## LR(1) items:
expr -> LET . IDENT EQ expr IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On IDENT shift to state 7
## Reductions:

State 7:
## Known stack suffix:
## LET IDENT
## LR(1) items:
expr -> LET IDENT . EQ expr IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On EQ shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## LET IDENT EQ
## LR(1) items:
expr -> LET IDENT EQ . expr IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 11
## Reductions:

State 9:
## Known stack suffix:
## IDENT
## LR(1) items:
expr -> IDENT . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
## Reductions:
-- On TIMES SET RP PRINT PLUS MINUS IN EOF DIV
--   reduce production expr -> IDENT

State 10:
## Known stack suffix:
## CST
## LR(1) items:
expr -> CST . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
## Reductions:
-- On TIMES SET RP PRINT PLUS MINUS IN EOF DIV
--   reduce production expr -> CST

State 11:
## Known stack suffix:
## LET IDENT EQ expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES PLUS MINUS IN DIV ]
expr -> expr . MINUS expr [ TIMES PLUS MINUS IN DIV ]
expr -> expr . TIMES expr [ TIMES PLUS MINUS IN DIV ]
expr -> expr . DIV expr [ TIMES PLUS MINUS IN DIV ]
expr -> LET IDENT EQ expr . IN expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On TIMES shift to state 12
-- On PLUS shift to state 14
-- On MINUS shift to state 18
-- On IN shift to state 20
-- On DIV shift to state 16
## Reductions:

State 12:
## Known stack suffix:
## expr TIMES
## LR(1) items:
expr -> expr TIMES . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## expr TIMES expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr TIMES expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
## Reductions:
-- On TIMES SET RP PRINT PLUS MINUS IN EOF DIV
--   reduce production expr -> expr TIMES expr

State 14:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr PLUS expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On TIMES shift to state 12
-- On DIV shift to state 16
## Reductions:
-- On SET RP PRINT PLUS MINUS IN EOF
--   reduce production expr -> expr PLUS expr

State 16:
## Known stack suffix:
## expr DIV
## LR(1) items:
expr -> expr DIV . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## expr DIV expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr DIV expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
## Reductions:
-- On TIMES SET RP PRINT PLUS MINUS IN EOF DIV
--   reduce production expr -> expr DIV expr

State 18:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 19
## Reductions:

State 19:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr MINUS expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On TIMES shift to state 12
-- On DIV shift to state 16
## Reductions:
-- On SET RP PRINT PLUS MINUS IN EOF
--   reduce production expr -> expr MINUS expr

State 20:
## Known stack suffix:
## LET IDENT EQ expr IN
## LR(1) items:
expr -> LET IDENT EQ expr IN . expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 21
## Reductions:

State 21:
## Known stack suffix:
## LET IDENT EQ expr IN expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> LET IDENT EQ expr IN expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On TIMES shift to state 12
-- On PLUS shift to state 14
-- On MINUS shift to state 18
-- On DIV shift to state 16
## Reductions:
-- On SET RP PRINT IN EOF
--   reduce production expr -> LET IDENT EQ expr IN expr

State 22:
## Known stack suffix:
## LP expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES RP PLUS MINUS DIV ]
expr -> expr . MINUS expr [ TIMES RP PLUS MINUS DIV ]
expr -> expr . TIMES expr [ TIMES RP PLUS MINUS DIV ]
expr -> expr . DIV expr [ TIMES RP PLUS MINUS DIV ]
expr -> LP expr . RP [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
-- On TIMES shift to state 12
-- On RP shift to state 23
-- On PLUS shift to state 14
-- On MINUS shift to state 18
-- On DIV shift to state 16
## Reductions:

State 23:
## Known stack suffix:
## LP expr RP
## LR(1) items:
expr -> LP expr RP . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
## Reductions:
-- On TIMES SET RP PRINT PLUS MINUS IN EOF DIV
--   reduce production expr -> LP expr RP

State 24:
## Known stack suffix:
## MINUS expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> expr . DIV expr [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
expr -> MINUS expr . [ TIMES SET RP PRINT PLUS MINUS IN EOF DIV ]
## Transitions:
## Reductions:
-- On TIMES SET RP PRINT PLUS MINUS IN EOF DIV
--   reduce production expr -> MINUS expr

State 25:
## Known stack suffix:
## SET IDENT EQ expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . DIV expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
stmt -> SET IDENT EQ expr . [ SET PRINT EOF ]
## Transitions:
-- On TIMES shift to state 12
-- On PLUS shift to state 14
-- On MINUS shift to state 18
-- On DIV shift to state 16
## Reductions:
-- On SET PRINT EOF
--   reduce production stmt -> SET IDENT EQ expr

State 26:
## Known stack suffix:
## PRINT
## LR(1) items:
stmt -> PRINT . expr [ SET PRINT EOF ]
## Transitions:
-- On MINUS shift to state 4
-- On LP shift to state 5
-- On LET shift to state 6
-- On IDENT shift to state 9
-- On CST shift to state 10
-- On expr shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## PRINT expr
## LR(1) items:
expr -> expr . PLUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . MINUS expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . TIMES expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
expr -> expr . DIV expr [ TIMES SET PRINT PLUS MINUS EOF DIV ]
stmt -> PRINT expr . [ SET PRINT EOF ]
## Transitions:
-- On TIMES shift to state 12
-- On PLUS shift to state 14
-- On MINUS shift to state 18
-- On DIV shift to state 16
## Reductions:
-- On SET PRINT EOF
--   reduce production stmt -> PRINT expr

State 28:
## Known stack suffix:
## stmts
## LR(1) items:
prog -> stmts . EOF [ # ]
stmts -> stmts . stmt [ SET PRINT EOF ]
## Transitions:
-- On SET shift to state 1
-- On PRINT shift to state 26
-- On EOF shift to state 29
-- On stmt shift to state 30
## Reductions:

State 29:
## Known stack suffix:
## stmts EOF
## LR(1) items:
prog -> stmts EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production prog -> stmts EOF

State 30:
## Known stack suffix:
## stmts stmt
## LR(1) items:
stmts -> stmts stmt . [ SET PRINT EOF ]
## Transitions:
## Reductions:
-- On SET PRINT EOF
--   reduce production stmts -> stmts stmt

State 31:
## Known stack suffix:
## stmt
## LR(1) items:
stmts -> stmt . [ SET PRINT EOF ]
## Transitions:
## Reductions:
-- On SET PRINT EOF
--   reduce production stmts -> stmt

State 32:
## Known stack suffix:
## prog
## LR(1) items:
prog' -> prog . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept prog

